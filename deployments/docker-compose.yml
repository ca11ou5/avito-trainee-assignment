services:
  merch-shop:
    container_name: merch-shop
    build:
      context: ../
      dockerfile: ./build/Dockerfile
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
      - POSTGRES_URL=${POSTGRES_URL}
      - PORT=${PORT}
      - JWT_SALT=${JWT_SALT}
    ports:
      - ${PORT}:${PORT}
    networks:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  postgres:
    container_name: postgres
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - postgres
      - migrate

    # DELETE:
    ports:
      - "5432:5432"
    #
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    container_name: migrate
    image: migrate/migrate
    volumes:
      - ../internal/adapters/secondary/postgres/migrations/:/migrations
    command:
      ["-path", "/migrations", "-database",  "${POSTGRES_URL}", "up"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - migrate

networks:
  postgres:
    driver: bridge
  migrate:
    driver: bridge
